library(ggplot2)
library(gridExtra)
########################################################################
########################################################################
#### Cheese Example
########################################################################
########################################################################
#######################
##Load Data
#######################
dat.cheese<-data.frame(
  taste=c(12.3,20.9,39.0,47.9,5.6,25.9,37.3,21.9,18.1,21.0,34.9,57.2,0.7,25.9,54.9,
          40.9,15.9,6.4,18.0,38.9,14.0,15.2,32.0,56.7,16.8,11.6,26.5,0.7,13.4,5.5),
  acetic=c(4.543,5.159,5.366,5.759,4.663,5.697,5.892,6.078,4.898,5.242,5.740,6.446,4.477,
           5.236,6.151,6.365,4.787,5.412,5.247,5.438,4.564,5.298,5.455,5.855,5.366,6.043,
           6.458,5.328,5.802,6.176),
  h2s=c(3.135,5.043,5.438,7.496,3.807,7.601,8.726,7.966,3.850,4.174,6.142,
        7.908,2.996,4.942,6.752,9.588,3.912,4.700,6.174,9.064,4.949,5.220,
        9.242,10.200,3.664,3.219,6.962,3.912,6.685,4.787),
  lactic=c(0.86,1.53,1.57,1.81,0.99,1.09,1.29,1.78,1.29,1.58,1.68,1.90,1.06,1.30,1.52,
           1.74,1.16,1.49,1.63,1.99,1.15,1.33,1.44,2.01,1.31,1.46,1.72,1.25,1.08,1.25)
)
#######################
##Fit the linear model
#######################
mod.cheese<-lm(taste~acetic+h2s+lactic,data=dat.cheese)
coef(mod.cheese)

#######################
##Fitted and Residual Values
#######################
fitted(mod.cheese)
residuals(mod.cheese)

#######################
## MS and SS values
#######################
anova(mod.cheese) #breaks it down farther

(n<-nrow(dat.cheese))
(p<-length(coef(mod.cheese))) #four coefficients
y.bar<-mean(dat.cheese$taste)
(SS.res<-sum(residuals(mod.cheese)^2))
(MS.res<-SS.res/(n-p))
(SS.reg<-sum((fitted(mod.cheese)-y.bar)^2))
(MS.reg<-SS.reg/(p-1))
(SS.total<-SS.reg+SS.res)
(F.stat<-MS.reg/MS.res)

#######################
##ANOVA remark
#######################
mod2.cheese<-lm(taste~h2s+lactic+acetic,data=dat.cheese)
anova(mod2.cheese)

#######################
##ANOVA remark 2
#######################
library(car)
Anova(mod.cheese,type = 2)

#########################
## Visualization
#########################
alpha<-0.05
f.obs<-F.stat
ggdat<-data.frame(f=seq(0,20,0.01),
                  f1=df(x=seq(0,20,0.01),df1=p-1,df2=n-p))
ggdat.highlight<-data.frame(x=f.obs,y=0)

ggplot(data=ggdat,aes(x=f,y=f1))+
  geom_line()+
  geom_ribbon(data=subset(ggdat,f>=qf(1-alpha,df1=p-1,df2=n-p)),aes(ymax=f1),ymin=0,
              fill="grey",color=NA)+
  geom_ribbon(data=subset(ggdat,f>=f.obs),aes(ymax=f1),ymin=0,
              fill="red",color=NA,alpha=0.25)+
  geom_point(data=ggdat.highlight,aes(x=x,y=y),color="red")+
  geom_hline(yintercept = 0)+
  theme_bw()+
  xlab("f")+
  ylab("Density")+
  ggtitle("Regression ANOVA F Test",
          subtitle=bquote(H[0]*":"~beta[1]=={beta[2]=={beta[3]==0}}~"versus"~H[a]*": that at least one is not zero"))+
  annotate("text", x=4, y=0.075,
           label= deparse(bquote(alpha==0.05)),parse=T,size=3.5)+ 
  annotate("text", x=f.obs, y=0.1, label="Observation \n P-value<0.0001",size=3.5)

#########################
## Confidence Intervals for coefficients
#########################
confint(mod.cheese,level=0.95)

#########################
## Confidence Interval
#########################
newData<-data.frame(acetic=5.5,h2s=6.0,lactic=1.4)
predict(mod.cheese,newData,level=0.95,interval="confidence")

#########################
## Prediction Interval
#########################
predict(mod.cheese,newData,level=0.95,interval="prediction")

########################################################################
########################################################################
#### Checking Residuals -- Normality
########################################################################
########################################################################
########################################
####  Plot the residuals
########################################
ggdat<-data.frame(e=residuals(mod.cheese))
ggdat.gaussian<-data.frame(x=seq(-25,35,0.01),
                           f=dnorm(seq(-25,35,0.01),
                                   #ei should have mean zero
                                   mean=0,
                                   #ei should have common variance  
                                   sd=summary(mod.cheese)$sigma))
ggplot(data=ggdat,aes(x=e))+
  geom_histogram(aes(y=..density..),bins=15,
                 fill="lightblue",color="black")+
  geom_density(aes(color="Loess Density Estimate"),size=1)+
  geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  theme_bw()+
  xlab("Residual")+
  ylab("Density")+
  labs(color = "")

########################################
####  Plot the residuals ecdf
########################################
e.cdf.func<-ecdf(residuals(mod.cheese))
e.cdf<-e.cdf.func(sort(residuals(mod.cheese)))

ggdat<-data.frame(e=sort(residuals(mod.cheese)),
                  e.cdf=e.cdf)
ggdat.gaussian<-data.frame(x=seq(-25,35,0.01),
                           CDF=pnorm(seq(-25,35,0.01),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod.cheese)$sigma))
ggplot(data=ggdat,aes(x=e))+
  geom_step(aes(y=e.cdf,color="Empirical CDF"))+
  geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  geom_hline(yintercept=0)+
  theme_bw()+
  xlab("Residual")+
  ylab("Cumulative Density")+
  labs(color = "")

########################################
####  QQplot of the residuals
########################################
library("qqplotr")
ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
  stat_qq_band(alpha=0.25) +
  stat_qq_line() +
  stat_qq_point() +
  theme_bw()+
  xlab("Gaussian Quantiles")+
  ylab("Sample Quantiles")

########################################
####  Plot the fitted vs residuals
########################################
ggdat<-data.frame(x=fitted(mod.cheese),
                  y=residuals(mod.cheese))
ggplot(data=ggdat,aes(x=x,y=y))+
  geom_point(shape=1)+
  geom_hline(yintercept = 0,color="red",linetype="dashed",size=1)+
  xlab(bquote("Fitted Values"~(hat(Y))))+
  ylab("Residual")+
  theme_bw()

########################################################################
########################################################################
#### Electricity Example
########################################################################
########################################################################
#######################
##Load Data
#######################
dat.electricity<-data.frame(
  Monthly.Usage=c(679,292,1012,493,582,1156,997,2189,1097,2078,1818,1700,747,
                  2030,1643,414,354,1276,745,435,540,874,1543,1029,710,1434,
                  837,1748,1381,1428,1255,1777,370,2316,1130,463,770,724,808,
                  790,783,406,1242,658,1746,468,1114,413,1787,3560,1495,2221,
                  1526),
  Peak.Demand=c(0.79,0.44,0.56,0.79,2.70,3.64,4.73,9.50,5.34,6.85,5.84,5.21,
                3.25,4.43,3.16,0.50,0.17,1.88,0.77,1.39,0.56,1.56,5.28,0.64,
                4.00,0.31,4.20,4.88,3.48,7.58,2.63,4.99,0.59,8.19,4.49,0.51,
                1.74,4.10,3.94,0.96,3.29,0.44,3.24,2.14,5.71,0.64,1.90,0.51,
                8.33,14.94,5.11,3.85,3.93))

mod.electricity<-lm(Peak.Demand~Monthly.Usage,data=dat)
summary(mod.electricity)

ggplot(dat.electricity, aes(x=Monthly.Usage, y=Peak.Demand)) +
  geom_point(shape=1)+
  geom_smooth(alpha=0.25,color="black",method="lm")+
  theme_bw()+
  xlab("Monthly Usage (kWh)")+
  ylab("Peak Demand (kWh)")

########################################
####  Plot the residuals
########################################
ggdat<-data.frame(e=residuals(mod.electricity))
ggdat.gaussian<-data.frame(x=seq(-5,5,0.01),
                           f=dnorm(seq(-5,5,0.01),
                                   #ei should have mean zero
                                   mean=0,
                                   #ei should have common variance  
                                   sd=summary(mod.electricity)$sigma))
g.hist<-ggplot(data=ggdat,aes(x=e))+
  geom_histogram(aes(y=..density..),bins=15,
                 fill="lightblue",color="black")+
  geom_density(aes(color="Loess Density Estimate"),size=1)+
  geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  theme_bw()+
  xlab("Residual")+
  ylab("Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  Plot the residuals ecdf
########################################
e.cdf.func<-ecdf(residuals(mod.electricity))
e.cdf<-e.cdf.func(sort(residuals(mod.electricity)))

ggdat<-data.frame(e=sort(residuals(mod.electricity)),
                  e.cdf=e.cdf)
ggdat.gaussian<-data.frame(x=seq(-5,5,0.01),
                           CDF=pnorm(seq(-5,5,0.01),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod.electricity)$sigma))
g.ecdf<-ggplot(data=ggdat,aes(x=e))+
  geom_step(aes(y=e.cdf,color="Empirical CDF"))+
  geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  geom_hline(yintercept=0)+
  theme_bw()+
  xlab("Residual")+
  ylab("Cumulative Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  QQplot of the residuals
########################################
library("qqplotr")
g.qq<-ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
  stat_qq_band(alpha=0.25) +
  stat_qq_line() +
  stat_qq_point() +
  theme_bw()+
  xlab("Gaussian Quantiles")+
  ylab("Sample Quantiles")

########################################
####  Residual Plot
########################################
ggdat<-data.frame(x=fitted(mod.electricity),
                  y=residuals(mod.electricity))
g.res<-ggplot(data=ggdat,aes(x=x,y=y))+
  geom_point(shape=1)+
  geom_hline(yintercept = 0,color="red",linetype="dashed",size=1)+
  xlab(bquote("Fitted Values"~(hat(Y))))+
  ylab("Residual")+
  theme_bw()

grid.arrange(g.hist,g.ecdf,g.qq,g.res)

#######################
##Boxcox
#######################
library(MASS)
bc.transform<-boxcox(mod)
(lambda <- bc.transform$x[which.max(bc.transform$y)])

#######################
## Fit transformed model
#######################
dat.electricity$sqrt.Peak.Demand<-sqrt(dat$Peak.Demand)
mod.electricity.transformed<-lm(sqrt.Peak.Demand~Monthly.Usage,data=dat)
summary(mod.electricity.transformed)

ggplot(dat.electricity, aes(x=Monthly.Usage, y=sqrt.Peak.Demand)) +
  geom_point(shape=1)+
  geom_smooth(alpha=0.25,color="black",method="lm")+
  theme_bw()+
  xlab("Monthly Usage (kWh)")+
  ylab("Peak Demand (square root kWh)")

########################################
####  Plot the residuals
########################################
ggdat<-data.frame(e=residuals(mod.electricity.transformed))
ggdat.gaussian<-data.frame(x=seq(-5,5,0.01),
                           f=dnorm(seq(-5,5,0.01),
                                   #ei should have mean zero
                                   mean=0,
                                   #ei should have common variance  
                                   sd=summary(mod.electricity.transformed)$sigma))
g.hist<-ggplot(data=ggdat,aes(x=e))+
  geom_histogram(aes(y=..density..),bins=15,
                 fill="lightblue",color="black")+
  geom_density(aes(color="Loess Density Estimate"),size=1)+
  geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  theme_bw()+
  xlab("Residual")+
  ylab("Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  Plot the residuals ecdf
########################################
e.cdf.func<-ecdf(residuals(mod.electricity.transformed))
e.cdf<-e.cdf.func(sort(residuals(mod.electricity.transformed)))

ggdat<-data.frame(e=sort(residuals(mod.electricity.transformed)),
                  e.cdf=e.cdf)
ggdat.gaussian<-data.frame(x=seq(-5,5,0.01),
                           CDF=pnorm(seq(-5,5,0.01),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod.electricity.transformed)$sigma))
g.ecdf<-ggplot(data=ggdat,aes(x=e))+
  geom_step(aes(y=e.cdf,color="Empirical CDF"))+
  geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  geom_hline(yintercept=0)+
  theme_bw()+
  xlab("Residual")+
  ylab("Cumulative Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  QQplot of the residuals
########################################
library("qqplotr")
g.qq<-ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
  stat_qq_band(alpha=0.25) +
  stat_qq_line() +
  stat_qq_point() +
  theme_bw()+
  xlab("Gaussian Quantiles")+
  ylab("Sample Quantiles")

########################################
####  Residual Plot
########################################
ggdat<-data.frame(x=fitted(mod.electricity.transformed),
                  y=residuals(mod.electricity.transformed))
g.res<-ggplot(data=ggdat,aes(x=x,y=y))+
  geom_point(shape=1)+
  geom_hline(yintercept = 0,color="red",linetype="dashed",size=1)+
  xlab(bquote("Fitted Values"~(hat(Y))))+
  ylab("Residual")+
  theme_bw()

grid.arrange(g.hist,g.ecdf,g.qq,g.res)

########################################
####  Confidence Interval coefficent
########################################
confint(mod.electricity.transformed,level=0.95)


########################################################################
########################################################################
#### Windmill Example
########################################################################
########################################################################
dat.windmill<-data.frame(
  wind.velocity=c(5,6,3.4,2.7,10,9.7,9.55,3.05,8.15,6.2,2.9,6.35,4.6,5.8,
                  7.4,3.6,7.85,8.8,7,5.45,9.1,10.2,4.1,3.95,2.45),
  DC.output = c(1.582,1.822,1.057,0.5,2.236,2.386,2.294,0.558,2.166,1.866,
                0.653,1.93,1.562,1.737,2.088,1.137,2.179,2.112,1.8,1.501,
                2.303,2.31,1.194,1.144,0.123))
mod.windmill<-lm(DC.output~wind.velocity,data=dat.windmill)
summary(mod.windmill)

ggplot(mod.windmill, aes(x=wind.velocity, y=DC.output)) +
  geom_point(shape=1)+
  geom_smooth(alpha=0.25,color="black",method="lm")+
  theme_bw()+
  xlab("Wind Velocity (mph)")+
  ylab("DC Output")

########################################
####  Plot the residuals
########################################
ggdat<-data.frame(e=residuals(mod.windmill))
ggdat.gaussian<-data.frame(x=seq(-1,1,0.01),
                           f=dnorm(seq(-1,1,0.01),
                                   #ei should have mean zero
                                   mean=0,
                                   #ei should have common variance  
                                   sd=summary(mod.windmill)$sigma))
g.hist<-ggplot(data=ggdat,aes(x=e))+
  geom_histogram(aes(y=..density..),bins=15,
                 fill="lightblue",color="black")+
  geom_density(aes(color="Loess Density Estimate"),size=1)+
  geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  theme_bw()+
  xlab("Residual")+
  ylab("Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  Plot the residuals ecdf
########################################
e.cdf.func<-ecdf(residuals(mod.windmill))
e.cdf<-e.cdf.func(sort(residuals(mod.windmill)))

ggdat<-data.frame(e=sort(residuals(mod.windmill)),
                  e.cdf=e.cdf)
ggdat.gaussian<-data.frame(x=seq(-1,1,0.01),
                           CDF=pnorm(seq(-1,1,0.01),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod.windmill)$sigma))
g.ecdf<-ggplot(data=ggdat,aes(x=e))+
  geom_step(aes(y=e.cdf,color="Empirical CDF"))+
  geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  geom_hline(yintercept=0)+
  theme_bw()+
  xlab("Residual")+
  ylab("Cumulative Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  QQplot of the residuals
########################################
library("qqplotr")
g.qq<-ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
  stat_qq_band(alpha=0.25) +
  stat_qq_line() +
  stat_qq_point() +
  theme_bw()+
  xlab("Gaussian Quantiles")+
  ylab("Sample Quantiles")

########################################
####  Residual Plot
########################################
ggdat<-data.frame(x=fitted(mod.windmill),
                  y=residuals(mod.windmill))
g.res<-ggplot(data=ggdat,aes(x=x,y=y))+
  geom_point(shape=1)+
  geom_hline(yintercept = 0,color="red",linetype="dashed",size=1)+
  xlab(bquote("Fitted Values"~(hat(Y))))+
  ylab("Residual")+
  theme_bw()

grid.arrange(g.hist,g.ecdf,g.qq,g.res)

#coefficient of determination
summary(mod.windmill)$adj.r.squared
#######################
## Fit transformed model
#######################
dat.windmill$wind.velocity.sq<-dat.windmill$wind.velocity^2

mod.windmill.transformed<-lm(DC.output~wind.velocity+wind.velocity.sq,data=dat.windmill)
summary(mod.windmill.transformed)

newData<-data.frame(wind.velocity=seq(2,11,0.01),
                    wind.velocity.sq=seq(2,11,0.01)^2)
ggdat.lm<-data.frame(x=seq(2,11,0.01),
                     y=predict(mod.windmill.transformed,newData,interval="confidence")
                     )
ggplot(data=ggdat.lm,aes(x=x,y=y.fit)) +
  geom_point(data=mod.windmill.transformed,aes(x=wind.velocity, y=DC.output),shape=1)+
  geom_line()+
  geom_ribbon(aes(ymin=y.lwr, ymax=y.upr), alpha=0.2)+
  theme_bw()+
  xlab("Wind Velocity (mph)")+
  ylab("DC Output")

########################################
####  Plot the residuals
########################################
ggdat<-data.frame(e=residuals(mod.windmill.transformed))
ggdat.gaussian<-data.frame(x=seq(-1,1,0.01),
                           f=dnorm(seq(-1,1,0.01),
                                   #ei should have mean zero
                                   mean=0,
                                   #ei should have common variance  
                                   sd=summary(mod.windmill.transformed)$sigma))
g.hist<-ggplot(data=ggdat,aes(x=e))+
  geom_histogram(aes(y=..density..),bins=15,
                 fill="lightblue",color="black")+
  geom_density(aes(color="Loess Density Estimate"),size=1)+
  geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  theme_bw()+
  xlab("Residual")+
  ylab("Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  Plot the residuals ecdf
########################################
e.cdf.func<-ecdf(residuals(mod.windmill.transformed))
e.cdf<-e.cdf.func(sort(residuals(mod.windmill.transformed)))

ggdat<-data.frame(e=sort(residuals(mod.windmill.transformed)),
                  e.cdf=e.cdf)
ggdat.gaussian<-data.frame(x=seq(-1,1,0.01),
                           CDF=pnorm(seq(-1,1,0.01),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod.windmill.transformed)$sigma))
g.ecdf<-ggplot(data=ggdat,aes(x=e))+
  geom_step(aes(y=e.cdf,color="Empirical CDF"))+
  geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Under Gaussian Assumption"),linetype="dashed",size=1)+
  geom_hline(yintercept=0)+
  theme_bw()+
  xlab("Residual")+
  ylab("Cumulative Density")+
  labs(color = "")+
  theme(legend.position = "bottom")


########################################
####  QQplot of the residuals
########################################
library("qqplotr")
g.qq<-ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
  stat_qq_band(alpha=0.25) +
  stat_qq_line() +
  stat_qq_point() +
  theme_bw()+
  xlab("Gaussian Quantiles")+
  ylab("Sample Quantiles")

########################################
####  Residual Plot
########################################
ggdat<-data.frame(x=fitted(mod.windmill.transformed),
                  y=residuals(mod.windmill.transformed))
g.res<-ggplot(data=ggdat,aes(x=x,y=y))+
  geom_point(shape=1)+
  geom_hline(yintercept = 0,color="red",linetype="dashed",size=1)+
  xlab(bquote("Fitted Values"~(hat(Y))))+
  ylab("Residual")+
  theme_bw()

grid.arrange(g.hist,g.ecdf,g.qq,g.res)

########################################
####  Confidence Interval coefficent
########################################
confint(mod.windmill.transformed,level=0.95)

#coefficient of determination
summary(mod.windmill.transformed)$r.squared
